<!DOCTYPE html>
<html lang="en" dir="ltr">

<head>
    <meta charset="utf-8">
    <title>Book cab</title>
    <meta charset="utf-8">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
    <link rel="stylesheet" href="/stylesheets/style.css">
    <link href="https://api.mapbox.com/mapbox-gl-js/v1.6.1/mapbox-gl.css" rel="stylesheet" />
    <link rel="stylesheet" href="https://unpkg.com/esri-leaflet-geocoder/dist/esri-leaflet-geocoder.css">

    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.6.0/dist/leaflet.css" integrity="sha512-xwE/Az9zrjBIphAcBb3F6JVqxf46+CDLwfLMHloNu6KEQCAWi6HcDUbeOfBIptF7tcCzusKFjFw2yuvEpDL9wQ==" crossorigin="" />
    <link rel="stylesheet" href="https://unpkg.com/leaflet-routing-machine@latest/dist/leaflet-routing-machine.css" />

    <script src="https://unpkg.com/leaflet@1.6.0/dist/leaflet.js" integrity="sha512-gZwIG9x3wUXg2hdXF6+rVkLF/0Vi9U8D2Ntg4Ga5I5BZpVkVxlJWbSQtXPSiUTtC0TjtGOmxa1AJPuV0CPthew==" crossorigin=""></script>
    <script src="https://api.mapbox.com/mapbox-gl-js/v1.6.1/mapbox-gl.js"></script>
    <script src="https://unpkg.com/leaflet/dist/leaflet-src.js"></script>

    <script src="https://unpkg.com/leaflet-routing-machine@latest/dist/leaflet-routing-machine.js"></script>
    <script src="https://unpkg.com/esri-leaflet"></script>
    <script src="https://unpkg.com/esri-leaflet-geocoder"></script>


    <body>

        <div id="mapid"></div>

        <script>
            var popup = L.popup();

            function onMapClick(e) {
                popup
                    .setLatLng(e.latlng)
                    .setContent("You clicked the map at " + e.latlng.toString())
                    .openOn(mymap);


                const userLatitude = e.latlng.lat;
                const userLongitude = e.latlng.lng;

                const userLocation = {
                    userLatitude,
                    userLongitude
                };
                const options = {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(userLocation)
                }


                fetch('/ride', options).then(response => {
                    console.log(response);
                });


            }


            var mymap = L.map('mapid').setView([22.563039, 88.412098], 14);

            L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
            }).addTo(mymap);


            if ('geolocation' in navigator) {

                console.log("geolocation available");
                navigator.geolocation.getCurrentPosition(function(position) {

                    const userLatitude = position.coords.latitude;
                    const userLongitude = position.coords.longitude;
                    var marker = L.marker([userLatitude, userLongitude]).addTo(mymap);

                    const userLocation = {
                        userLatitude,
                        userLongitude
                    };
                    const options = {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify(userLocation)
                    };
                    fetch('/ride', options).then(response => {
                        console.log(response);
                    });

                });

            } else {
                console.log("geolocation not available");
            }


            var amb_icon = L.icon({
                iconUrl: 'plus.png',

                iconSize: [38, 38], // size of the icon
                shadowSize: [50, 64], // size of the shadow
                iconAnchor: [22, 94], // point of the icon which will correspond to marker's location
                shadowAnchor: [4, 62], // the same for the shadow
                popupAnchor: [-3, -25], // point from which the popup should open relative to the iconAnchor
            });

            /*
            var routeControl = L.Routing.control({
                waypoints: [
                    L.latLng(currentLatitude, currentLongitude),
                    L.latLng(userLatitude, userLongitude)
                ]
            }).addTo(mymap);
            */
            /*
            var routeControl = L.Routing.control({
                waypoints: [
                    L.latLng(22.563039, 88.412098),
                    L.latLng(22.611475, 88.536072)
                ]
            }).addTo(mymap);


            routeControl.on('routesfound', function(e) {
                var routes = e.routes;
                var summary = routes[0].summary;
                // alert distance and time in km and minutes
                alert('Total distance is ' + summary.totalDistance / 1000);
            });
            */

            L.marker([22.563127, 88.412058], {
                icon: amb_icon
            }).addTo(mymap);


            mymap.on('click', onMapClick);


            L.control.scale().addTo(mymap);


            var searchControl = L.esri.Geocoding.geosearch().addTo(mymap);

            // create an empty layer group to store the results and add it to the map
            var results = L.layerGroup().addTo(mymap);

            // listen for the results event and add every result to the map
            searchControl.on("results", function(data) {
                results.clearLayers();
                for (var i = data.results.length - 1; i >= 0; i--) {

                    results.addLayer(L.marker(data.results[i].latlng));

                    const userLatitude = data.results[i].latlng.lat;
                    const userLongitude = data.results[i].latlng.lng;

                    const userLocation = {
                        userLatitude,
                        userLongitude
                    };


                    if ('geolocation' in navigator) {
                        navigator.geolocation.getCurrentPosition(function(position) {
                            var routeControl = L.Routing.control({
                                waypoints: [
                                    L.latLng(position.coords.latitude, position.coords.longitude),
                                    L.latLng(userLatitude, userLongitude)
                                ],
                                router: L.Routing.mapbox('pk.eyJ1IjoibmlzaC05NzYiLCJhIjoiY2s1YzFobjA5MWRuOTNrbXVybnZ5a3U0eiJ9.gXRjdsDWTg4BvnWWP0XMUA')
                            }).addTo(mymap);
                        });
                    }

                    const options = {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify(userLocation)
                    }


                    fetch('/ride', options).then(response => {
                        console.log(response);
                    });

                }
            });
        </script>

        <form class="" action="/book" method="GET">
            <button class="btn btn-primary" type="submit" name="button">Book</button>
        </form>

        <div class="container"></div>
        <div class="footer-padding"></div>
        <div class="footer">
            <p>Made with ❤️ by Code Love</p>
        </div>
    </body>

</html>